<UserControl 
    x:Class="ElectronicCad.Desktop.UI.Components.IconCheckBox"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:components="clr-namespace:ElectronicCad.Desktop.UI.Components"
    mc:Ignorable="d">
    <CheckBox IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}">
        <CheckBox.Template>
            <ControlTemplate TargetType="CheckBox">
                <components:Icon x:Name="Icon"/>
                
                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="Icon" Property="Path" Value="{Binding Path=EnableIconPath, RelativeSource={RelativeSource AncestorType=UserControl} }"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="False">
                        <Setter TargetName="Icon" Property="Path" Value="{Binding Path=DisableIconPath, RelativeSource={RelativeSource AncestorType=UserControl} }"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>            
        </CheckBox.Template>

        <CheckBox.Style>
            <Style TargetType="CheckBox">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource SecondaryForegroundBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border 
                                BorderThickness="1"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource PrimaryForegroundBrush}"/>
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </CheckBox.Style>
    </CheckBox>
</UserControl>
